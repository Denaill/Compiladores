Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RESET
    EOF
    SIMPLE
    TEXT
    EXP
    TRUE
    PACKED
    COMMENT
    OPENCOMMENT
    TO
    GOTO
    CHR
    NIL
    OPENCOMMENT2
    SQR
    OUTPUT
    PACK
    FILE
    CLOSECOMMENT2
    LABEL
    SUCC
    AMPERSANT
    ROUND
    GET
    WITH
    SIN
    TRUNC
    REPEAT
    DIVIDE
    FOR
    MAXINT
    INPUT
    UNTIL
    ARCTAN
    DOWNTO
    MOD
    REAL
    COS
    NEW
    CASE
    SET
    ODD
    UNPACK
    FALSE
    REWRITE
    PRED
    EOLN
    READLN
    BOOLEAN
    HASHTAG
    PUT
    ORD
    TYPE
    PAGE
    LN
    RECORD
    DISPOSE
    ABS
    IN
    WRITELN
    SQRT
    CLOSECOMMENT

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON block
Rule 2     block -> variable_declaration_part procedure_declaration_part statement_part
Rule 3     variable_declaration_part -> empty
Rule 4     variable_declaration_part -> VAR variable_declaration SEMICOLON variable_declaration_part
Rule 5     variable_declaration_part -> CONST const_declaration SEMICOLON variable_declaration_part
Rule 6     variable_declaration -> ID variable_declaration2 COLON type
Rule 7     variable_declaration2 -> COMMA ID variable_declaration2
Rule 8     variable_declaration2 -> empty
Rule 9     const_declaration -> ID EQUAL NUMBER
Rule 10    const_declaration -> ID EQUAL STRING
Rule 11    type -> simple_type
Rule 12    type -> array_type
Rule 13    array_type -> ARRAY LBRACKET index_range RBRACKET OF simple_type
Rule 14    index_range -> NUMBER DOT DOT NUMBER
Rule 15    simple_type -> type_identifier
Rule 16    type_identifier -> INTEGER
Rule 17    type_identifier -> CHAR
Rule 18    procedure_declaration_part -> empty
Rule 19    procedure_declaration_part -> procedure_declaration
Rule 20    procedure_declaration_part -> function_declaration
Rule 21    procedure_declaration -> PROCEDURE ID SEMICOLON block
Rule 22    function_declaration -> FUNCTION ID LPAREN variable_declaration RPAREN COLON type SEMICOLON variable_declaration_part
Rule 23    statement_part -> compound_statement
Rule 24    compound_statement -> BEGIN statement END DOT compound_statement2
Rule 25    compound_statement2 -> empty
Rule 26    compound_statement2 -> compound_statement
Rule 27    statement -> simple_statement
Rule 28    statement -> statement simple_statement
Rule 29    statement -> statement structured_statement
Rule 30    statement -> structured_statement
Rule 31    statement3 -> SEMICOLON statement
Rule 32    statement3 -> empty
Rule 33    simple_statement -> assignment_statement
Rule 34    simple_statement -> procedure_statement
Rule 35    simple_statement -> read_statement
Rule 36    simple_statement -> write_statement
Rule 37    assignment_statement -> variable COLON EQUAL expression SEMICOLON
Rule 38    procedure_statement -> procedure_identifier
Rule 39    procedure_identifier -> ID
Rule 40    read_statement -> READ LPAREN input_variable input_variable2 RPAREN SEMICOLON
Rule 41    input_variable -> variable
Rule 42    input_variable2 -> empty
Rule 43    input_variable2 -> COMMA variable
Rule 44    write_statement -> WRITE LPAREN output_value output_value2 RPAREN SEMICOLON
Rule 45    output_value -> expression
Rule 46    output_value -> STRING
Rule 47    output_value2 -> empty
Rule 48    output_value2 -> COMMA expression
Rule 49    structured_statement -> compound_statement
Rule 50    structured_statement -> if_statement
Rule 51    structured_statement -> case_statement
Rule 52    if_statement -> IF LPAREN expression RPAREN THEN statement
Rule 53    if_statement -> IF LPAREN expression RPAREN THEN statement ELSE statement
Rule 54    while_statement -> WHILE expression DO statement
Rule 55    expression -> simple_expression
Rule 56    expression -> simple_expression relational_operator simple_expression
Rule 57    simple_expression -> sign term simple_expression2
Rule 58    simple_expression2 -> adding_operator term
Rule 59    simple_expression2 -> empty
Rule 60    term -> factor term2
Rule 61    term2 -> multiplying_operator factor
Rule 62    term2 -> empty
Rule 63    factor -> variable
Rule 64    factor -> NUMBER
Rule 65    factor -> LPAREN expression RPAREN
Rule 66    factor -> NOT factor
Rule 67    relational_operator -> EQUAL
Rule 68    relational_operator -> DISTINT
Rule 69    relational_operator -> LESS
Rule 70    relational_operator -> GREATER
Rule 71    sign -> PLUS
Rule 72    sign -> MINUS
Rule 73    sign -> empty
Rule 74    adding_operator -> PLUS
Rule 75    adding_operator -> MINUS
Rule 76    adding_operator -> OR
Rule 77    multiplying_operator -> TIMES
Rule 78    multiplying_operator -> DIV
Rule 79    multiplying_operator -> AND
Rule 80    variable -> entire_variable
Rule 81    variable -> indexed_variable
Rule 82    indexed_variable -> array_variable LBRACKET expression RBRACKET
Rule 83    array_variable -> entire_variable
Rule 84    entire_variable -> variable_identifier
Rule 85    variable_identifier -> ID
Rule 86    empty -> <empty>

Terminals, with rules where they appear

ABS                  : 
AMPERSANT            : 
AND                  : 79
ARCTAN               : 
ARRAY                : 13
BEGIN                : 24
BOOLEAN              : 
CASE                 : 
CHAR                 : 17
CHR                  : 
CLOSECOMMENT         : 
CLOSECOMMENT2        : 
COLON                : 6 22 37
COMMA                : 7 43 48
COMMENT              : 
CONST                : 5
COS                  : 
DISPOSE              : 
DISTINT              : 68
DIV                  : 78
DIVIDE               : 
DO                   : 54
DOT                  : 14 14 24
DOWNTO               : 
ELSE                 : 53
END                  : 24
EOF                  : 
EOLN                 : 
EQUAL                : 9 10 37 67
EXP                  : 
FALSE                : 
FILE                 : 
FOR                  : 
FUNCTION             : 22
GET                  : 
GOTO                 : 
GREATER              : 70
HASHTAG              : 
ID                   : 1 6 7 9 10 21 22 39 85
IF                   : 52 53
IN                   : 
INPUT                : 
INTEGER              : 16
LABEL                : 
LBRACKET             : 13 82
LESS                 : 69
LN                   : 
LPAREN               : 22 40 44 52 53 65
MAXINT               : 
MINUS                : 72 75
MOD                  : 
NEW                  : 
NIL                  : 
NOT                  : 66
NUMBER               : 9 14 14 64
ODD                  : 
OF                   : 13
OPENCOMMENT          : 
OPENCOMMENT2         : 
OR                   : 76
ORD                  : 
OUTPUT               : 
PACK                 : 
PACKED               : 
PAGE                 : 
PLUS                 : 71 74
PRED                 : 
PROCEDURE            : 21
PROGRAM              : 1
PUT                  : 
RBRACKET             : 13 82
READ                 : 40
READLN               : 
REAL                 : 
RECORD               : 
REPEAT               : 
RESET                : 
REWRITE              : 
ROUND                : 
RPAREN               : 22 40 44 52 53 65
SEMICOLON            : 1 4 5 21 22 31 37 40 44
SET                  : 
SIMPLE               : 
SIN                  : 
SQR                  : 
SQRT                 : 
STRING               : 10 46
SUCC                 : 
TEXT                 : 
THEN                 : 52 53
TIMES                : 77
TO                   : 
TRUE                 : 
TRUNC                : 
TYPE                 : 
UNPACK               : 
UNTIL                : 
VAR                  : 4
WHILE                : 54
WITH                 : 
WRITE                : 44
WRITELN              : 
error                : 

Nonterminals, with rules where they appear

adding_operator      : 58
array_type           : 12
array_variable       : 82
assignment_statement : 33
block                : 1 21
case_statement       : 51
compound_statement   : 23 26 49
compound_statement2  : 24
const_declaration    : 5
empty                : 3 8 18 25 32 42 47 59 62 73
entire_variable      : 80 83
expression           : 37 45 48 52 53 54 65 82
factor               : 60 61 66
function_declaration : 20
if_statement         : 50
index_range          : 13
indexed_variable     : 81
input_variable       : 40
input_variable2      : 40
multiplying_operator : 61
output_value         : 44
output_value2        : 44
procedure_declaration : 19
procedure_declaration_part : 2
procedure_identifier : 38
procedure_statement  : 34
program              : 0
read_statement       : 35
relational_operator  : 56
sign                 : 57
simple_expression    : 55 56 56
simple_expression2   : 57
simple_statement     : 27 28
simple_type          : 11 13
statement            : 24 28 29 31 52 53 53 54
statement3           : 
statement_part       : 2
structured_statement : 29 30
term                 : 57 58
term2                : 60
type                 : 6 22
type_identifier      : 15
variable             : 37 41 43 63
variable_declaration : 4 22
variable_declaration2 : 6 7
variable_declaration_part : 2 4 5 22
variable_identifier  : 84
while_statement      : 
write_statement      : 36

